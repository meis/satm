#!/usr/bin/env python
# -*- coding: utf-8 -*-

import sys, pygame
from pygame.locals import *

WIDTH = 790
HEIGHT = 310

class stage:	
	direction = "right"
	tick_time = 800
	min_tick_time = 150

	maps =[		
["#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#"],
["#","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","#"],
["#","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","#"],
["#","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","#"],
["#","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","2","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","#"],
["#","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","#"],
["#","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","#"],
["#","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","#"],
["#","0","0","0","2","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","2","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","#"],
["#","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","2","0","0","2","2","0","0","2","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","#"],
["#","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","#"],
["#","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","#"],
["#","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","#"],
["#","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","#"],
["#","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","2","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","#"],
["#","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","#"],
["#","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","#"],
["#","0","0","0","0","2","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","#"],
["#","0","0","0","0","0","0","0","2","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","#"],
["#","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","#"],
["#","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","#"],
["#","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","#"],
["#","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","#"],
["#","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","#"],
["#","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","#"],
["#","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","#"],
["#","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","2","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","#"],
["#","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","#"],
["#","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","#"],
["#","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","#"],
["#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#"]
]


	def __init__(self):
		#self.grid = open(filename, "r").readlines()
		self.direction = "right"
		self.snake = [[33,10],[32,10],[32,11],[31,11],[31,12]]
		self.snake = [[33,10]]
		self.eating = False
		

		add_x = 0
		add_y = 0

		if self.direction == "left":
			add_x = 1
		elif self.direction == "right":
			add_x = -1
		elif self.direction == "up":
			add_y = 1
		else:
			add_y = -1

		# Snake starts with lenght 3.		
		self.snake.append([(self.snake[0][0] + add_x), (self.snake[0][1] + add_y)])
		self.snake.append([(self.snake[1][0] + add_x), (self.snake[1][1] + add_y)])
				
	def print_background(self, screen):
		background_image = load_image('background.png')
		screen.blit(background_image, (0, 0))	

		for i in range(len(self.maps)):
			for j in range(len(self.maps[i])):
				if self.maps[i][j] != '0':
					screen.blit(self.print_sprite(self.maps[i][j]), ((j)*10 , (i)*10))
					
	def print_snake(self, screen):

		# Print snake's head.
		head_part = "head-"
		head_part = head_part + self.direction
		screen.blit(self.print_snake_part(head_part), (self.snake[0][0]*10, self.snake[0][1]*10))

				
		# Print snake's body.
		for i in range(1,(len(self.snake)-1)):
			body_part = "body-"

			if self.snake[i][0] == self.snake[i-1][0]:
				if self.snake[i][1] > self.snake[i-1][1]:
					body_part = body_part + "up"
				else:
					body_part = body_part + "down"
				
			elif self.snake[i][0] > self.snake[i-1][0]:
				body_part = body_part + "left"
			else:
				body_part = body_part + "right"

			if self.snake[i][0] == self.snake[i+1][0]:
				if self.snake[i][1] > self.snake[i+1][1]:
					body_part = body_part + "-up"
				else:
					body_part = body_part + "-down"
				
			elif self.snake[i][0] > self.snake[i+1][0]:
				body_part = body_part + "-left"
			else:
				body_part = body_part + "-right"

			screen.blit(self.print_snake_part(body_part), (self.snake[i][0]*10, self.snake[i][1]*10))

		# Print snake's tail.
		tail_part = "tail-"

		if self.snake[len(self.snake)-1][0] > self.snake[len(self.snake)-2][0]:
			tail_part = tail_part + "right"
		elif self.snake[len(self.snake)-1][0] < self.snake[len(self.snake)-2][0]:
			tail_part = tail_part + "left"
		elif self.snake[len(self.snake)-1][1] < self.snake[len(self.snake)-2][1]:
			tail_part = tail_part + "up"
		else:
			tail_part = tail_part + "down"

		screen.blit(self.print_snake_part(tail_part), (self.snake[len(self.snake)-1][0]*10, self.snake[len(self.snake)-1][1]*10))

	def blit(self, screen):

		self.print_background(screen)
		self.print_snake(screen)
#		for i in range(len(self.grid)):
#			for j in range(len(self.grid[i])):
#				if self.grid[i][j] != '0':
#					screen.blit(self.print_sprite(self.grid[i][j]), ((j)*10 , (i)*10))
		

	def print_snake_part(self, part):
		#print part
		
		if part == 'head-right':						#> - head
			img = load_image('snake-head.png', True)
		elif part == 'head-left':						#< - head
			img = load_image('snake-head.png', True)
			img = pygame.transform.rotate(img, 180)
		elif part == 'head-up':							#^ - head
			img = load_image('snake-head.png', True)
			img = pygame.transform.rotate(img, 90)	
		elif part == 'head-down':						#v - head
			img = load_image('snake-head.png', True)
			img = pygame.transform.rotate(img, 270)
		elif part == 'tail-left':								#< - tail
			img = load_image('snake-tail.png', True)
		elif part == 'tail-right':								#> - tail
			img = load_image('snake-tail.png', True)
			img = pygame.transform.rotate(img, 180)
		elif part == 'tail-down':								#v - tail
			img = load_image('snake-tail.png', True)
			img = pygame.transform.rotate(img, 90)
		elif part == 'tail-up':								#^ - tail
			img = load_image('snake-tail.png', True)
			img = pygame.transform.rotate(img, 270)
		elif part == 'body-right-up' or part == 'body-up-right':								#╚ - body
			img = load_image('snake-l.png', True)
		elif part == 'body-left-down' or part == 'body-down-left':								#╗ - body
			img = load_image('snake-l.png', True)
			img = pygame.transform.rotate(img, 180)
		elif part == 'body-left-up' or part == 'body-up-left':								#╝ - body
			img = load_image('snake-l.png', True)
			img = pygame.transform.rotate(img, 90)	
		elif part == 'body-right-down' or part == 'body-down-right':								#╔ - body
			img = load_image('snake-l.png', True)
			img = pygame.transform.rotate(img, 270)
		elif part == 'body-right-left' or part == 'body-left-right' :								#= - body
			img = load_image('snake-body.png', True)
		elif part == 'body-up-down' or part == 'body-down-up':								#‖ - body
			img = load_image('snake-body.png', True)
			img = pygame.transform.rotate(img, 90)

		return img

	def change_direction(self, direction):
		if self.direction == "up" and direction != "down":
			self.direction = direction
		elif self.direction == "down" and direction != "up":
			self.direction = direction
		elif self.direction == "left" and direction != "right":
			self.direction = direction
		elif self.direction == "right" and direction != "left":
			self.direction = direction

		#print self.direction
	
	def move_snake(self):
		new_x = self.snake[0][0]
		new_y = self.snake[0][1]
		
		if self.direction == "up":
			new_y = new_y - 1
		elif self.direction == "down":
			new_y = new_y + 1
		elif self.direction == "left":
			new_x = new_x - 1
		else:
			new_x = new_x + 1

		self.snake.insert(0, [new_x, new_y])

		if self.eating != True:
			self.snake = self.snake[0:len(self.snake)-1]
		else:			
			self.eating = False
		
		# Snake vs Snake.
		if self.snake.count([new_x, new_y]) > 1:
			print "Snake vs Snake"
			sys.exit(0)

		# Snake vs Block.		
		if self.maps[self.snake[0][1]][self.snake[0][0]] == "#":
			print "Contra block"
			sys.exit(0)

		# Snake vs Food
		elif self.maps[self.snake[0][1]][self.snake[0][0]] == "2":
			self.eating = True
			self.maps[self.snake[0][1]][self.snake[0][0]] = "0"
			if self.tick_time > self.min_tick_time:
				self.tick_time = self.tick_time - 100

	def print_sprite(self, code):
	
		if code == '#':								## - block
			img = load_image('block.png')
		elif code == '2':								#@ - food
			img = load_image('food.png', True)
		else:
			img = load_image('fail.png')

		return img

def load_image(filename, transparent=False):
	try: image = pygame.image.load(filename)
	except pygame.error, message:
		raise SystemExit, message

	image = image.convert()
	if transparent:
		color = image.get_at((0,0))
		image.set_colorkey(color, RLEACCEL)

	return image



def main():
	screen = pygame.display.set_mode((WIDTH, HEIGHT))
	pygame.display.set_caption("Snake!")    
	stage1 = stage()

	clock = pygame.time.Clock()
	x = 0
	#moves = ["right", "up", "right", "up" , "right"]

	prev_clock = clock.tick()
	curr_clock = prev_clock
	direction = "right"
	
	while True:
		for eventos in pygame.event.get():
			if eventos.type == QUIT:
				sys.exit(0)

		keys = pygame.key.get_pressed()
		if keys[K_ESCAPE]:
			sys.exit(0)

		if keys[K_DOWN]:
			direction = "down"

		if keys[K_UP]:
			direction = "up"

		if keys[K_RIGHT]:
			direction = "right"

		if keys[K_LEFT]:
			direction = "left"
		

		stage1.blit(screen)
		pygame.display.flip()
		
		curr_clock = curr_clock + clock.tick()

		if curr_clock - prev_clock > stage1.tick_time:
			prev_clock = clock.tick()
			curr_clock = 0
			stage1.change_direction(direction)	
			stage1.move_snake()	
			#x = (x + 1) % 5
#		print "tick"
		
		
		#pygame.time.delay(800)

	return 0

if __name__ == '__main__':
	pygame.init()
	main()


